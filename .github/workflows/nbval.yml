name: nbval

on:
  workflow_dispatch:
  push:
    branches:
    - 'main'
    - 'setup'
    paths:
    - 'setup.py'
    - 'pyproject.toml'
    - 'tools/*'
jobs:
  build_nbval:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        python: [3.8,]
        framework: [paddle,torch,tf,runtime]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Dotenv Action
      id: dotenv
      uses: xom9ikk/dotenv@v1.0.2
      with:
        path: ./.github/workflows
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    - name: Install required packages
      run:  |
            if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install libsndfile1 -y
            fi
      shell: bash
    - name: Cache OpenVINO Pip Packages
      id: cachepip
      uses: actions/cache@v2
      with:
        path: |
          pipcache
        key: ${{ env.PIP_CACHE_KEY }}-${{ matrix.os }}-${{ matrix.python }}
    - name: Cache Files
      id: cachefiles
      uses: actions/cache@v2
      with:
        path: |
          # NOTE: when modifying cache paths, update FILES_CACHE_KEY in .env
          # and change cache paths in convert_notebooks.yml as well
          ${{ env.HUB_HOME }}
          notebooks/208-optical-character-recognition/open_model_zoo_cache
          notebooks/110-ct-segmentation-quantize/kits19_frames_1
          notebooks/210-ct-scan-live-inference/kits19_frames_1
        key: ${{ env.FILES_CACHE_KEY }}
    - name: Cache openvino packages
      if: steps.cachepip.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        mkdir pipcache
        python -m pip install --cache-dir pipcache --no-deps openvino openvino-dev nncf
        cp -r pipcache pipcache_openvino
        python -m pip uninstall -y openvino openvino-dev nncf
    - name: Install prerequisites
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade nbval setuptools wheel
    - name: Build wheel
      run: python setup.py bdist_wheel
    - name: Install notebook dependencies
#      if: matrix.os != 'macos-latest'
      run: |
        # pip install --cache-dir pipcache "openvino_notebooks[${{ matrix.framework }}] @ https://github.com/helena-intel/openvino_notebooks/raw/setup/openvino_notebooks-2021.4.2-py3-none-any.whl" --find-links https://download.pytorch.org/whl/torch_stable.html
        pip install --cache-dir pipcache "dist/openvino_notebooks-2021.4.2-py3-none-any.whl[${{ matrix.framework }}]" --find-links https://download.pytorch.org/whl/torch_stable.html
        python -m ipykernel install --user --name openvino_env
#    - name: Install notebook dependencies (macOS)
#      # --find-links is not required for macOS
#      if: matrix.os != 'macos-latest'
#      run: |
#        pip install --cache-dir pipcache "openvino_notebooks[${{ matrix.framework }}] @ https://github.com/helena-intel/openvino_notebooks/raw/setup/openvino_notebooks-2021.4.2-py3-none-any.whl"
    - name: Create pipcache directory
      if: steps.cachepip.outputs.cache-hit != 'true'
      run: |
        mv pipcache pipcache_full
        mv pipcache_openvino pipcache
    - name: Pip freeze
      run: |
        python -m pip freeze
        python -m pip freeze > pip-freeze-${{ github.sha }}-${{matrix.os}}-${{ matrix.python }}-${{ matrix.framework }}.txt
    - name: Archive pip freeze
      uses: actions/upload-artifact@v2
      with:
        name: pip-freeze
        path: pip-freeze-${{ github.sha }}-${{matrix.os}}-${{ matrix.python }}.txt
    #- name: Check install
    #  run: |
    #    check_install
    - name: Patch notebooks
      run: |
        python .ci/patch_notebooks.py
    - name: Test Jupyterlab
      run: |
        jupyter lab notebooks --help
    - name: Analysing torch with nbval
      if: matrix.framework == 'torch'
      run: |
        python -m pytest --nbval -x -k "test_102 or test_104 or test_105 or test_110 or test_111 or test_112 or test_205 or test_208 or test_209 or test_211 or test_302" --durations 10
    - name: Analysing paddle with nbval
      if: matrix.framework == 'paddle'
      run: |
        python -m pytest --nbval -x -k "test_103 or test_206 or test_207" --durations 10
      env:
        HUB_HOME: /tmp/paddlehub
    - name: Analysing tensorflow with nbval
      if: matrix.framework == 'tf'
      run: |
        # Temporarily disable 402 because it fails (only) in the CI for macOS
        # python -m pytest --nbval -x -k "test_101 or test_301 or test_305 or test_401 or test_402" --durations 10
        python -m pytest --nbval -x -k "test_101 or test_301 or test_305 or test_401" --durations 10
    - name: Analysing tensorflow with nbval
      if: matrix.framework == 'runtime'
      run: |
        python -m pytest --nbval -x -k "test_0 or test_201 or test_202 or test_210" --durations 10
    - name: Python folder size
      if: matrix.os != 'windows-latest'
      run: |
        python -c "import sys,pathlib,subprocess;path=pathlib.Path(sys.executable).parents[1];subprocess.run(['du','-sh', path])"
